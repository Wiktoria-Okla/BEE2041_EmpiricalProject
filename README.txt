--------------------------------------------------------------------------------
Title: BEE2041 Empirical Project: Data-led blog analysing the 2023 Formula 1 season.
Author: 690031449
Date: 25/04/2024
--------------------------------------------------------------------------------
## Introduction

This project uses web-scraped data of the Formula 1 2023 season to analyse race 
performance across different teams and individual drivers. The objective of this 
project is to analyse perfromance of teams and individual drivers to identify the 
strongest performers, the weakest, and those who show the most potential and should 
be watched out for in the 2024 season. The analysis also aims to investigate some key 
factors affecting race performance, such as performance in qualifying rounds, and pit 
stop times. The project also produces a linear regression model.

The project uses the BeautifulSoup package in Python to web-scrape data from the official 
Formula 1 website: https://www.formula1.com/en/racing/2023.html. The race results, qualifiers
results, and pit stop times are all scraped from individual sub-pages on the main Formula 1 
website.

Please note that the tables for the Emilia Romagna race have not been included in the analysis 
because this race was cancelled in the 2023 season.

It uses Python to clean and model the data by merging the necessary dataframes. It uses Python 
libraries such as Pandas, Numpy, and Seaborn to create graphical outputs and statistics out of the 
modelled dataframes.

When interepreting results please note that the points are only points scored in the final races
and do not include sprint races, hence there is a discrepancy between the final points in this
project and the official Formula 1 tables. 

Please note the last time the webscraping function was tested was on: 23/04/2024. There is a
possibility that the url addresses have been modified since.

## Repository overview
This repository is structured as follows:

├── git.
├── data
    ├── F1_full_scraped.csv
    ├── F1_pit_scraped.csv
├── output
    ├── blog.txt
    ├── blog_copy.html
    ├── code_output.pdf
├── source code
    ├── project_code.ipynb
    ├── blog_markdown.md
├── LICENSE.txt
└── README.txt



The 'source code' folder contains the Jupyter notebook which contains all the code necessary to 
reproduce the project. This includes: Web-scraping data, cleaning data, modelling dataframes, 
producing outputs such as graphs and tables, and a regression model. Please note that there are
are additional graphs, plots, and tables contained in this notebook which have not been included 
in the final blog post but may be of interest. This folder also contains the file blog_markdown.md 
which contains all the markdown code necessary to replicate the final blog post.

The clean dataframes produced in the Jupyter notebook are also saved as CSV copies in the 'data' 
folder. The F1_full_scraped.csv dataset corresponds to the race dataframe, and F1_pit_scraped.csv 
corresponds to pit stop dataframe.

The 'output' folder contains a blog.txt file containing the links to the GitHub project repository 
and a link to the final blog post. As well as a copy of the blog_output.html which is a copy of the
blog page in the case that the HackMD link is not accessible. The file code_output.pdf is a pdf 
version of the Jupyter notebook code.



## Running instructions

In order to replicate all results the user needs to install python and run the code script contained in 
the project_code.ipynb file cell by cell in the order that it is written. The CSV datasets contained in 
the 'data' folder are not necessary to run the python code as the whole project relies on web-scraped data. 

Note: If you encounter an error in the web-scraping process please re-run the corresponding cell. Sometimes
errors are created due to network issues.

This code has been tested using Python 3.8.8 Jupyter Notebook.
Within python, a number of additional libraries are required.  These are indicated below, along 
with the version number used to generate original results:
 > beautifulsoup4 4.9.3
 > pandas 1.2.4
 > matplotlib 3.3.4
 > numpy 1.20.1
 > seaborn 0.11.1
 > statsmodels 0.12.2


## Replicating the blog post

The final output is a blog-post located on the HackMD website: https://hackmd.io/?nav=overview. In order to
replicate the exact output you will need to copy and paste visualisations directly from the Jupyter notebook
into HackMD note and enter text as markdown. The whole markdown script is located in the folder 'source code' 
underthe file blog_markdown.md


## About

This repository was generated by 690031449.  For queries:
 mailto:wo224@exeter.ac.uk